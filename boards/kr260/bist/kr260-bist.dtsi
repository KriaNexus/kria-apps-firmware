// SPDX-License-Identifier: GPL-2.0
/*
 * dts file for Xilinx KR260 bist
 *
 * (C) Copyright 2023, Advanced Micro Devices, Inc.
 *
 */

/dts-v1/;
/plugin/;

&fpga_full {
	#address-cells = <2>;
	#size-cells = <2>;
	firmware-name = "kr260-bist.bit.bin";
	resets = <&zynqmp_reset 116>;
};

&amba {
	afi0: afi0 {
		compatible = "xlnx,afi-fpga";
		config-afi = <0 0>, <1 0>, <2 0>, <3 0>, <4 0>, <5 0>, <6 0>, <7 0>, <8 0>, <9 0>, <10 0>, <11 0>, <12 0>, <13 0>, <14 0xa00>, <15 0x000>;
	};
	clocking0: clocking0 {
		#clock-cells = <0>;
		assigned-clock-rates = <99999001>;
		assigned-clocks = <&zynqmp_clk 71>;
		clock-output-names = "fabric_clk";
		clocks = <&zynqmp_clk 71>;
		compatible = "xlnx,fclk";
	};
	clocking1: clocking1 {
		#clock-cells = <0>;
		assigned-clock-rates = <99999001>;
		assigned-clocks = <&zynqmp_clk 72>;
		clock-output-names = "fabric_clk";
		clocks = <&zynqmp_clk 72>;
		compatible = "xlnx,fclk";
	};
	misc_clk_0: misc_clk_0 {
		#clock-cells = <0>;
		clock-frequency = <125000000>;
		compatible = "fixed-clock";
	};
	misc_clk_1: misc_clk_1 {
		#clock-cells = <0>;
		clock-frequency = <333333333>;
		compatible = "fixed-clock";
	};
	axi_dma_gem2: dma@a0010000 {
		#dma-cells = <1>;
		clock-names = "s_axi_lite_aclk", "m_axi_sg_aclk", "m_axi_mm2s_aclk", "m_axi_s2mm_aclk";
		clocks = <&zynqmp_clk 71>, <&misc_clk_0>, <&misc_clk_0>, <&misc_clk_0>;
		compatible = "xlnx,eth-dma";
		interrupt-names = "mm2s_introut", "s2mm_introut";
		interrupt-parent = <&gic>;
		interrupts = <0 93 4 0 94 4>;
		reg = <0x0 0xa0010000 0x0 0x10000>;
		xlnx,addrwidth = /bits/ 8 <0x20>;
		xlnx,num-queues = /bits/ 16 <0x1>;
	};
	axi_ethernet_gem2: ethernet@a0140000 {
		axistream-connected = <&axi_dma_gem2>;
		clock-names = "s_axi_lite_clk", "axis_clk", "gtx_clk", "ref_clk";
		clocks = <&zynqmp_clk 71>, <&misc_clk_0>, <&misc_clk_0>, <&misc_clk_1>;
		compatible = "xlnx,axi-ethernet-7.2", "xlnx,axi-ethernet-1.00.a";
		device_type = "network";
		interrupt-names = "mac_irq", "interrupt", "mm2s_introut", "s2mm_introut";
		interrupt-parent = <&gic>;
		interrupts = <0 95 1 0 96 4 0 93 4 0 94 4>;
		local-mac-address = [00 0a 35 00 00 00];
		phy-mode = "rgmii-id";
		reg = <0x0 0xa0140000 0x0 0x40000>;
		xlnx,channel-ids = "1";
		xlnx,num-queues = /bits/ 16 <0x1>;
		phy-handle = <&phy2>;
		xlnx,rxcsum = <0x0>;
		xlnx,rxmem = <0x1000>;
		xlnx,txcsum = <0x0>;
		axi_ethernet_gem2_mdio: mdio {
			#address-cells = <1>;
			#size-cells = <0>;
			phy2: phy@2 {
				reg = <0x2>;
				ti,rx-internal-delay = <0x4>;
				ti,tx-internal-delay = <0x4>;
				tx-fifo-depth = <0x1>;
				rx-fifo-depth = <0x1>;
				ti,dp83867-rxctrl-strap-quirk;
			};
		};
	};
	axi_dma_gem3: dma@a0000000 {
		#dma-cells = <1>;
		clock-names = "s_axi_lite_aclk", "m_axi_sg_aclk", "m_axi_mm2s_aclk", "m_axi_s2mm_aclk";
		clocks = <&zynqmp_clk 71>, <&misc_clk_0>, <&misc_clk_0>, <&misc_clk_0>;
		compatible = "xlnx,eth-dma";
		interrupt-names = "mm2s_introut", "s2mm_introut";
		interrupt-parent = <&gic>;
		interrupts = <0 91 4 0 92 4>;
		reg = <0x0 0xa0000000 0x0 0x10000>;
		xlnx,addrwidth = /bits/ 8 <0x20>;
		xlnx,num-queues = /bits/ 16 <0x1>;
	};
	axi_ethernet_gem3: ethernet@a0040000 {
		axistream-connected = <&axi_dma_gem3>;
		clock-names = "s_axi_lite_clk", "axis_clk", "gtx_clk";
		clocks = <&zynqmp_clk 71>, <&misc_clk_0>, <&misc_clk_0>;
		compatible = "xlnx,axi-ethernet-7.2", "xlnx,axi-ethernet-1.00.a";
		device_type = "network";
		interrupt-names = "mac_irq", "interrupt", "mm2s_introut", "s2mm_introut";
		interrupt-parent = <&gic>;
		interrupts = <0 89 1 0 90 4 0 91 4 0 92 4>;
		local-mac-address = [00 0a 35 00 00 01];
		phy-mode = "rgmii-id";
		reg = <0x0 0xa0040000 0x0 0x40000>;
		xlnx,channel-ids = "1";
		xlnx,num-queues = /bits/ 16 <0x1>;
		phy-handle = <&phy3>;
		xlnx,rxcsum = <0x0>;
		xlnx,rxmem = <0x1000>;
		xlnx,txcsum = <0x0>;
		axi_ethernet_gem3_mdio: mdio {
			#address-cells = <1>;
			#size-cells = <0>;
			phy3: phy@3 {
				reg = <0x3>;
				ti,rx-internal-delay = <0x4>;
				ti,tx-internal-delay = <0x4>;
				tx-fifo-depth = <0x1>;
				rx-fifo-depth = <0x1>;
				ti,dp83867-rxctrl-strap-quirk;
			};
		};
	};
};

